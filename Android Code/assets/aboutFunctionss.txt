<p>
A function is a group of statements that together perform a task. Every C++ program has at least one function, which is main(), also can define additional functions.
</p>

<p>
You can divide up your code into separate functions. the division usually is so each function performs a specific task.
</p>

<p>
A function declaration tells the compiler about a function's name, return type, and parameters. A function definition provides the actual body of the function.
The general form of a C++ function definition is as follows:
return_type function_name( parameter list )
{
   body of the function
}
</p>
	
	
<p><b>Return Type:</b> A function may return a value. The return_type is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return_type is the keyword void.
</p>

<p><b>Function Name:</b> This is the actual name of the function. The function name and the parameter list together constitute the function signature.
</p>

<p><b>Parameters:</b> A parameter is like a placeholder. When a function is invoked, you pass a value to the parameter. This value is referred to as actual parameter or argument. The parameter list refers to the type, order, and number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters.
</p>

<p><b>Function Body:</b> The function body contains a collection of statements that define what the function does.
</p>
	